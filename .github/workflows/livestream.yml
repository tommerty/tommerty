name: Twitch Live Status

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.6

    - name: Set up Node.js
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 'latest'

    - name: Install dependencies
      run: npm install tmi.js

    - name: Check Twitch live status
      id: twitch-status
      env:
        TWITCH_USERNAME: tommertyboi
      run: |
        const tmi = require('tmi.js');
        const client = new tmi.Client();

        client.connect().then(() => {
          client.api({
            url: `https://api.twitch.tv/helix/streams?user_login=${process.env.TWITCH_USERNAME}`,
            method: 'GET',
          }).then((response) => {
            const isLive = response.data.length > 0;
            console.log(`live_status=${isLive}`);
            process.exit(0);
          }).catch((error) => {
            console.error('Error checking live status:', error);
            process.exit(1);
          });
        }).catch((error) => {
          console.error('Error connecting to Twitch:', error);
          process.exit(1);
        });

    - name: Update README
      env:
        LIVE_STATUS: ${{ steps.twitch-status.outputs.live_status }}
      run: |
        if [ "$LIVE_STATUS" == "true" ]; then
          if ! grep -q "Twitch Live Banner" README.md; then
            sed -i '1i\[![Twitch Live Banner](/assets/livebanner.png)](https://www.twitch.tv/${process.env.TWITCH_USERNAME})' README.md
          fi
        else
          sed -i '/^!\[Twitch Live Banner/d' README.md
        fi

    - name: Commit changes
      run: |
        git config --local user.email "tommerty@github.com"
        git config --local user.name "Tommerty"
        git add README.md
        git diff-index --quiet HEAD || git commit -m "Update Twitch live status in README"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
